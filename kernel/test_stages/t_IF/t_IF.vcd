$date
	Fri Jun 28 12:08:56 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module t_IF $end
$var wire 1 ! Updata $end
$var wire 32 " IFID_d_pc_update [31:0] $end
$var wire 32 # IFID_d_inst_update [31:0] $end
$var reg 1 $ EXMEM_c_SelPC $end
$var reg 32 % EXMEM_d_ALUout [31:0] $end
$var reg 32 & IFID_d_inst [31:0] $end
$var reg 32 ' IFID_d_pc [31:0] $end
$var reg 1 ( clk $end
$var reg 1 ) rst $end
$scope module uIF $end
$var wire 1 $ EXMEM_c_SelPC $end
$var wire 32 * EXMEM_d_ALUout [31:0] $end
$var wire 32 + IFID_d_pc [31:0] $end
$var wire 1 ( clk $end
$var wire 1 ) rst $end
$var wire 32 , IFID_d_inst [31:0] $end
$var reg 32 - pc [31:0] $end
$scope module u_i_mem $end
$var wire 32 . inst [31:0] $end
$var wire 32 / pc [31:0] $end
$var reg 65 0 line [64:0] $end
$var reg 32 1 value [31:0] $end
$var integer 32 2 file [31:0] $end
$var integer 32 3 i [31:0] $end
$var integer 32 4 r [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4
b1001 3
b10000000000000000000000000000011 2
b1000000001100111 1
b1010 0
b0 /
b101000000000001010110011 .
b0 -
b101000000000001010110011 ,
b0 +
b1100 *
0)
0(
b0 '
b101000000000001010110011 &
b1100 %
0$
b101000000000001010110011 #
b0 "
1!
$end
#5
1(
#10
0(
#15
1(
#20
1)
0(
#25
b100 '
b1100010011 &
1!
b1100010011 #
b1100010011 ,
b1100010011 .
b100 "
b100 +
b100 -
b100 /
1(
#30
0(
#35
b1000 '
b101100000000001110110011 &
1!
b101100000000001110110011 #
b101100000000001110110011 ,
b101100000000001110110011 .
b1000 "
b1000 +
b1000 -
b1000 /
1(
#40
0(
#45
b1100 '
b11100110101101001100011 &
1!
b11100110101101001100011 #
b11100110101101001100011 ,
b11100110101101001100011 .
b1100 "
b1100 +
b1100 -
b1100 /
1(
#50
0(
#55
b10000 '
b11000101010000000100011 &
1!
b11000101010000000100011 #
b11000101010000000100011 ,
b11000101010000000100011 .
b10000 "
b10000 +
b10000 -
b10000 /
1(
#60
1$
0(
#65
0$
b1100 '
b11100110101101001100011 &
1!
b11100110101101001100011 #
b11100110101101001100011 ,
b11100110101101001100011 .
b1100 "
b1100 +
b1100 -
b1100 /
1(
#70
0(
#75
b10000 '
b11000101010000000100011 &
1!
b11000101010000000100011 #
b11000101010000000100011 ,
b11000101010000000100011 .
b10000 "
b10000 +
b10000 -
b10000 /
1(
#80
0(
#85
b10100 '
b100110000001100010011 &
1!
b100110000001100010011 #
b100110000001100010011 ,
b100110000001100010011 .
b10100 "
b10100 +
b10100 -
b10100 /
1(
#90
0(
#95
b11000 '
b10000101000001010010011 &
1!
b10000101000001010010011 #
b10000101000001010010011 ,
b10000101000001010010011 .
b11000 "
b11000 +
b11000 -
b11000 /
1(
#100
0(
#105
b11100 '
b11111111000111111111000001101111 &
1!
b11111111000111111111000001101111 #
b11111111000111111111000001101111 ,
b11111111000111111111000001101111 .
b11100 "
b11100 +
b11100 -
b11100 /
1(
#110
0(
#115
b100000 '
b1000000001100111 &
1!
b1000000001100111 #
b1000000001100111 ,
b1000000001100111 .
b100000 "
b100000 +
b100000 -
b100000 /
1(
#120
0(
#125
b100100 '
b0 &
1!
b0 #
b0 ,
b0 .
b100100 "
b100100 +
b100100 -
b100100 /
1(
#130
0(
#135
b101000 '
1!
b101000 "
b101000 +
b101000 -
b101000 /
1(
#140
0(
#145
b101100 '
1!
b101100 "
b101100 +
b101100 -
b101100 /
1(
#150
0(
#155
b110000 '
1!
b110000 "
b110000 +
b110000 -
b110000 /
1(
#160
0(
#165
b110100 '
1!
b110100 "
b110100 +
b110100 -
b110100 /
1(
#170
0(
#175
b111000 '
1!
b111000 "
b111000 +
b111000 -
b111000 /
1(
#180
0(
#185
b111100 '
1!
b111100 "
b111100 +
b111100 -
b111100 /
1(
